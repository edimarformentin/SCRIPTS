services:
  postgres-db:
    image: postgres:16
    container_name: postgres-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: vaas_db
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d vaas_db || exit 1"]
      interval: 3s
      timeout: 3s
      start_period: 120s
      retries: 100

  gestao-web:
    build: ./backend/api
    container_name: gestao-web
    restart: unless-stopped
    runtime: nvidia
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres-db:5432/vaas_db
      CORS_ORIGINS: "*"
      RECORDINGS_PATH: /recordings
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: compute,video,utility
    depends_on:
      postgres-db:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./data/recordings:/recordings
      - ./config/mediamtx:/app/config/mediamtx
      - ./scripts:/app/scripts
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.hardware_info.json:/app/.hardware_info.json:ro
      - ./backups:/backups
      - .:/sistema
      - /proc:/host/proc:ro

  mediamtx:
    image: bluenviron/mediamtx:latest
    container_name: mediamtx
    restart: unless-stopped
    volumes:
      - ./config/mediamtx/mediamtx.yml:/mediamtx.yml:ro
      - ./data/recordings:/recordings
    ports:
      - "8888:8888"
      - "8554:8554"
      - "1935:1935"

  frontend-web:
    image: nginx:1.27-alpine
    container_name: frontend-web
    restart: unless-stopped
    depends_on:
      - gestao-web
    ports:
      - "80:80"
    volumes:
      - ./frontend/public:/usr/share/nginx/html:ro
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
